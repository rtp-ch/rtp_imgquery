extends imgQuery

block test
    script(type='text/javascript')
        var imagesIn = {
                "1":    {
                    "500" : '<img src="Images/pixel_ratio_1/400.gif" width="400" height="400">',
                    "700" : '<img src="Images/pixel_ratio_1/300.gif" width="300" height="300">',
                    "800" : '<img src="Images/pixel_ratio_1/750.gif" width="750" height="750">',
                    "1000" : '<img src="Images/pixel_ratio_1/900.gif" width="900" height="900">'
                },
                "1.5":    {
                    "500" : '<img src="Images/pixel_ratio_1_5/400.gif" width="400" height="400">',
                    "700" : '<img src="Images/pixel_ratio_1_5/300.gif" width="300" height="300">',
                    "800" : '<img src="Images/pixel_ratio_1_5/750.gif" width="750" height="750">',
                    "1000" : '<img src="Images/pixel_ratio_1_5/900.gif" width="900" height="900">'
                },
                "2":    {
                    "500" : '<img src="Images/pixel_ratio_2/400.gif" width="400" height="400">',
                    "700" : '<img src="Images/pixel_ratio_2/300.gif" width="300" height="300">',
                    "800" : '<img src="Images/pixel_ratio_2/750.gif" width="750" height="750">',
                    "1000" : '<img src="Images/pixel_ratio_2/900.gif" width="900" height="900">'
                }
            },
            breakpointsIn = [500,700,800,1000],
            ratiosIn = [1,1.5,2],
            cacheKeyIn = JSON.stringify(imagesIn);

        // Device Pixel ratio
        imgQry.ratios = {};
        imgQry.ratio = 2.2;

        // Window width
        imgQry.width = 300;

    |<script type="text/javascript">
    include ../../Build/js/imgQuery.min.js
    | </script>

    script(type='text/javascript')
        test('Small image selection for window width 300', function() {
            var actualImage = imgQry.images[cacheKeyIn],
                expectedImage = imagesIn["2"]["500"];
            equal(actualImage, expectedImage, 'Expected smallest image for pixel ratio 2');
        });